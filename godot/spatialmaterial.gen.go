package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// SpatialMaterialBillboardMode is an enum for BillboardMode values.
type SpatialMaterialBillboardMode int

const (
	SpatialMaterialBillboardDisabled  SpatialMaterialBillboardMode = 0
	SpatialMaterialBillboardEnabled   SpatialMaterialBillboardMode = 1
	SpatialMaterialBillboardFixedY    SpatialMaterialBillboardMode = 2
	SpatialMaterialBillboardParticles SpatialMaterialBillboardMode = 3
)

// SpatialMaterialBlendMode is an enum for BlendMode values.
type SpatialMaterialBlendMode int

const (
	SpatialMaterialBlendModeAdd SpatialMaterialBlendMode = 1
	SpatialMaterialBlendModeMix SpatialMaterialBlendMode = 0
	SpatialMaterialBlendModeMul SpatialMaterialBlendMode = 3
	SpatialMaterialBlendModeSub SpatialMaterialBlendMode = 2
)

// SpatialMaterialCullMode is an enum for CullMode values.
type SpatialMaterialCullMode int

const (
	SpatialMaterialCullBack     SpatialMaterialCullMode = 0
	SpatialMaterialCullDisabled SpatialMaterialCullMode = 2
	SpatialMaterialCullFront    SpatialMaterialCullMode = 1
)

// SpatialMaterialDepthDrawMode is an enum for DepthDrawMode values.
type SpatialMaterialDepthDrawMode int

const (
	SpatialMaterialDepthDrawAlphaOpaquePrepass SpatialMaterialDepthDrawMode = 3
	SpatialMaterialDepthDrawAlways             SpatialMaterialDepthDrawMode = 1
	SpatialMaterialDepthDrawDisabled           SpatialMaterialDepthDrawMode = 2
	SpatialMaterialDepthDrawOpaqueOnly         SpatialMaterialDepthDrawMode = 0
)

// SpatialMaterialDetailUV is an enum for DetailUV values.
type SpatialMaterialDetailUV int

const (
	SpatialMaterialDetailUv1 SpatialMaterialDetailUV = 0
	SpatialMaterialDetailUv2 SpatialMaterialDetailUV = 1
)

// SpatialMaterialDiffuseMode is an enum for DiffuseMode values.
type SpatialMaterialDiffuseMode int

const (
	SpatialMaterialDiffuseBurley      SpatialMaterialDiffuseMode = 0
	SpatialMaterialDiffuseLambert     SpatialMaterialDiffuseMode = 1
	SpatialMaterialDiffuseLambertWrap SpatialMaterialDiffuseMode = 2
	SpatialMaterialDiffuseOrenNayar   SpatialMaterialDiffuseMode = 3
	SpatialMaterialDiffuseToon        SpatialMaterialDiffuseMode = 4
)

// SpatialMaterialDistanceFadeMode is an enum for DistanceFadeMode values.
type SpatialMaterialDistanceFadeMode int

const (
	SpatialMaterialDistanceFadeDisabled     SpatialMaterialDistanceFadeMode = 0
	SpatialMaterialDistanceFadeObjectDither SpatialMaterialDistanceFadeMode = 3
	SpatialMaterialDistanceFadePixelAlpha   SpatialMaterialDistanceFadeMode = 1
	SpatialMaterialDistanceFadePixelDither  SpatialMaterialDistanceFadeMode = 2
)

// SpatialMaterialEmissionOperator is an enum for EmissionOperator values.
type SpatialMaterialEmissionOperator int

const (
	SpatialMaterialEmissionOpAdd      SpatialMaterialEmissionOperator = 0
	SpatialMaterialEmissionOpMultiply SpatialMaterialEmissionOperator = 1
)

// SpatialMaterialFeature is an enum for Feature values.
type SpatialMaterialFeature int

const (
	SpatialMaterialFeatureAmbientOcclusion    SpatialMaterialFeature = 6
	SpatialMaterialFeatureAnisotropy          SpatialMaterialFeature = 5
	SpatialMaterialFeatureClearcoat           SpatialMaterialFeature = 4
	SpatialMaterialFeatureDepthMapping        SpatialMaterialFeature = 7
	SpatialMaterialFeatureDetail              SpatialMaterialFeature = 11
	SpatialMaterialFeatureEmission            SpatialMaterialFeature = 1
	SpatialMaterialFeatureMax                 SpatialMaterialFeature = 12
	SpatialMaterialFeatureNormalMapping       SpatialMaterialFeature = 2
	SpatialMaterialFeatureRefraction          SpatialMaterialFeature = 10
	SpatialMaterialFeatureRim                 SpatialMaterialFeature = 3
	SpatialMaterialFeatureSubsuraceScattering SpatialMaterialFeature = 8
	SpatialMaterialFeatureTransmission        SpatialMaterialFeature = 9
	SpatialMaterialFeatureTransparent         SpatialMaterialFeature = 0
)

// SpatialMaterialFlags is an enum for Flags values.
type SpatialMaterialFlags int

const (
	SpatialMaterialFlagAlbedoFromVertexColor  SpatialMaterialFlags = 3
	SpatialMaterialFlagAlbedoTextureForceSrgb SpatialMaterialFlags = 14
	SpatialMaterialFlagAoOnUv2                SpatialMaterialFlags = 11
	SpatialMaterialFlagBillboardKeepScale     SpatialMaterialFlags = 7
	SpatialMaterialFlagDisableAmbientLight    SpatialMaterialFlags = 17
	SpatialMaterialFlagDisableDepthTest       SpatialMaterialFlags = 2
	SpatialMaterialFlagDontReceiveShadows     SpatialMaterialFlags = 15
	SpatialMaterialFlagEmissionOnUv2          SpatialMaterialFlags = 12
	SpatialMaterialFlagEnsureCorrectNormals   SpatialMaterialFlags = 16
	SpatialMaterialFlagFixedSize              SpatialMaterialFlags = 6
	SpatialMaterialFlagMax                    SpatialMaterialFlags = 18
	SpatialMaterialFlagSrgbVertexColor        SpatialMaterialFlags = 4
	SpatialMaterialFlagTriplanarUseWorld      SpatialMaterialFlags = 10
	SpatialMaterialFlagUnshaded               SpatialMaterialFlags = 0
	SpatialMaterialFlagUseAlphaScissor        SpatialMaterialFlags = 13
	SpatialMaterialFlagUsePointSize           SpatialMaterialFlags = 5
	SpatialMaterialFlagUseVertexLighting      SpatialMaterialFlags = 1
	SpatialMaterialFlagUv1UseTriplanar        SpatialMaterialFlags = 8
	SpatialMaterialFlagUv2UseTriplanar        SpatialMaterialFlags = 9
)

// SpatialMaterialSpecularMode is an enum for SpecularMode values.
type SpatialMaterialSpecularMode int

const (
	SpatialMaterialSpecularBlinn      SpatialMaterialSpecularMode = 1
	SpatialMaterialSpecularDisabled   SpatialMaterialSpecularMode = 4
	SpatialMaterialSpecularPhong      SpatialMaterialSpecularMode = 2
	SpatialMaterialSpecularSchlickGgx SpatialMaterialSpecularMode = 0
	SpatialMaterialSpecularToon       SpatialMaterialSpecularMode = 3
)

// SpatialMaterialTextureChannel is an enum for TextureChannel values.
type SpatialMaterialTextureChannel int

const (
	SpatialMaterialTextureChannelAlpha     SpatialMaterialTextureChannel = 3
	SpatialMaterialTextureChannelBlue      SpatialMaterialTextureChannel = 2
	SpatialMaterialTextureChannelGrayscale SpatialMaterialTextureChannel = 4
	SpatialMaterialTextureChannelGreen     SpatialMaterialTextureChannel = 1
	SpatialMaterialTextureChannelRed       SpatialMaterialTextureChannel = 0
)

// SpatialMaterialTextureParam is an enum for TextureParam values.
type SpatialMaterialTextureParam int

const (
	SpatialMaterialTextureAlbedo               SpatialMaterialTextureParam = 0
	SpatialMaterialTextureAmbientOcclusion     SpatialMaterialTextureParam = 8
	SpatialMaterialTextureClearcoat            SpatialMaterialTextureParam = 6
	SpatialMaterialTextureDepth                SpatialMaterialTextureParam = 9
	SpatialMaterialTextureDetailAlbedo         SpatialMaterialTextureParam = 14
	SpatialMaterialTextureDetailMask           SpatialMaterialTextureParam = 13
	SpatialMaterialTextureDetailNormal         SpatialMaterialTextureParam = 15
	SpatialMaterialTextureEmission             SpatialMaterialTextureParam = 3
	SpatialMaterialTextureFlowmap              SpatialMaterialTextureParam = 7
	SpatialMaterialTextureMax                  SpatialMaterialTextureParam = 16
	SpatialMaterialTextureMetallic             SpatialMaterialTextureParam = 1
	SpatialMaterialTextureNormal               SpatialMaterialTextureParam = 4
	SpatialMaterialTextureRefraction           SpatialMaterialTextureParam = 12
	SpatialMaterialTextureRim                  SpatialMaterialTextureParam = 5
	SpatialMaterialTextureRoughness            SpatialMaterialTextureParam = 2
	SpatialMaterialTextureSubsurfaceScattering SpatialMaterialTextureParam = 10
	SpatialMaterialTextureTransmission         SpatialMaterialTextureParam = 11
)

//func NewSpatialMaterialFromPointer(ptr gdnative.Pointer) SpatialMaterial {
func newSpatialMaterialFromPointer(ptr gdnative.Pointer) SpatialMaterial {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := SpatialMaterial{}
	obj.SetBaseObject(owner)

	return obj
}

/*
This provides a default material with a wide variety of rendering features and properties without the need to write shader code. See the tutorial below for details.
*/
type SpatialMaterial struct {
	Material
	owner gdnative.Object
}

func (o *SpatialMaterial) BaseClass() string {
	return "SpatialMaterial"
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *SpatialMaterial) GetAlbedo() gdnative.Color {
	//log.Println("Calling SpatialMaterial.GetAlbedo()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_albedo")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetAlphaScissorThreshold() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetAlphaScissorThreshold()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_alpha_scissor_threshold")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetAnisotropy() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetAnisotropy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_anisotropy")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetAoLightAffect() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetAoLightAffect()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_ao_light_affect")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::TextureChannel
*/
func (o *SpatialMaterial) GetAoTextureChannel() SpatialMaterialTextureChannel {
	//log.Println("Calling SpatialMaterial.GetAoTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_ao_texture_channel")

	// Call the parent method.
	// enum.SpatialMaterial::TextureChannel
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialTextureChannel(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::BillboardMode
*/
func (o *SpatialMaterial) GetBillboardMode() SpatialMaterialBillboardMode {
	//log.Println("Calling SpatialMaterial.GetBillboardMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_billboard_mode")

	// Call the parent method.
	// enum.SpatialMaterial::BillboardMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialBillboardMode(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::BlendMode
*/
func (o *SpatialMaterial) GetBlendMode() SpatialMaterialBlendMode {
	//log.Println("Calling SpatialMaterial.GetBlendMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_blend_mode")

	// Call the parent method.
	// enum.SpatialMaterial::BlendMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialBlendMode(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetClearcoat() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetClearcoat()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_clearcoat")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetClearcoatGloss() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetClearcoatGloss()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_clearcoat_gloss")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::CullMode
*/
func (o *SpatialMaterial) GetCullMode() SpatialMaterialCullMode {
	//log.Println("Calling SpatialMaterial.GetCullMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_cull_mode")

	// Call the parent method.
	// enum.SpatialMaterial::CullMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialCullMode(ret)
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) GetDepthDeepParallaxFlipBinormal() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.GetDepthDeepParallaxFlipBinormal()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_deep_parallax_flip_binormal")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) GetDepthDeepParallaxFlipTangent() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.GetDepthDeepParallaxFlipTangent()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_deep_parallax_flip_tangent")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *SpatialMaterial) GetDepthDeepParallaxMaxLayers() gdnative.Int {
	//log.Println("Calling SpatialMaterial.GetDepthDeepParallaxMaxLayers()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_deep_parallax_max_layers")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *SpatialMaterial) GetDepthDeepParallaxMinLayers() gdnative.Int {
	//log.Println("Calling SpatialMaterial.GetDepthDeepParallaxMinLayers()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_deep_parallax_min_layers")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::DepthDrawMode
*/
func (o *SpatialMaterial) GetDepthDrawMode() SpatialMaterialDepthDrawMode {
	//log.Println("Calling SpatialMaterial.GetDepthDrawMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_draw_mode")

	// Call the parent method.
	// enum.SpatialMaterial::DepthDrawMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialDepthDrawMode(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetDepthScale() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetDepthScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_depth_scale")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::BlendMode
*/
func (o *SpatialMaterial) GetDetailBlendMode() SpatialMaterialBlendMode {
	//log.Println("Calling SpatialMaterial.GetDetailBlendMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_detail_blend_mode")

	// Call the parent method.
	// enum.SpatialMaterial::BlendMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialBlendMode(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::DetailUV
*/
func (o *SpatialMaterial) GetDetailUv() SpatialMaterialDetailUV {
	//log.Println("Calling SpatialMaterial.GetDetailUv()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_detail_uv")

	// Call the parent method.
	// enum.SpatialMaterial::DetailUV
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialDetailUV(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::DiffuseMode
*/
func (o *SpatialMaterial) GetDiffuseMode() SpatialMaterialDiffuseMode {
	//log.Println("Calling SpatialMaterial.GetDiffuseMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_diffuse_mode")

	// Call the parent method.
	// enum.SpatialMaterial::DiffuseMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialDiffuseMode(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::DistanceFadeMode
*/
func (o *SpatialMaterial) GetDistanceFade() SpatialMaterialDistanceFadeMode {
	//log.Println("Calling SpatialMaterial.GetDistanceFade()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_distance_fade")

	// Call the parent method.
	// enum.SpatialMaterial::DistanceFadeMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialDistanceFadeMode(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetDistanceFadeMaxDistance() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetDistanceFadeMaxDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_distance_fade_max_distance")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetDistanceFadeMinDistance() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetDistanceFadeMinDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_distance_fade_min_distance")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *SpatialMaterial) GetEmission() gdnative.Color {
	//log.Println("Calling SpatialMaterial.GetEmission()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_emission")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetEmissionEnergy() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetEmissionEnergy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_emission_energy")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::EmissionOperator
*/
func (o *SpatialMaterial) GetEmissionOperator() SpatialMaterialEmissionOperator {
	//log.Println("Calling SpatialMaterial.GetEmissionOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_emission_operator")

	// Call the parent method.
	// enum.SpatialMaterial::EmissionOperator
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialEmissionOperator(ret)
}

/*
        Undocumented
	Args: [{ false feature int}], Returns: bool
*/
func (o *SpatialMaterial) GetFeature(feature gdnative.Int) gdnative.Bool {
	//log.Println("Calling SpatialMaterial.GetFeature()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(feature)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_feature")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false flag int}], Returns: bool
*/
func (o *SpatialMaterial) GetFlag(flag gdnative.Int) gdnative.Bool {
	//log.Println("Calling SpatialMaterial.GetFlag()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(flag)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_flag")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetGrow() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetGrow()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_grow")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetLineWidth() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetLineWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_line_width")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetMetallic() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetMetallic()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_metallic")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::TextureChannel
*/
func (o *SpatialMaterial) GetMetallicTextureChannel() SpatialMaterialTextureChannel {
	//log.Println("Calling SpatialMaterial.GetMetallicTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_metallic_texture_channel")

	// Call the parent method.
	// enum.SpatialMaterial::TextureChannel
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialTextureChannel(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetNormalScale() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetNormalScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_normal_scale")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *SpatialMaterial) GetParticlesAnimHFrames() gdnative.Int {
	//log.Println("Calling SpatialMaterial.GetParticlesAnimHFrames()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_particles_anim_h_frames")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) GetParticlesAnimLoop() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.GetParticlesAnimLoop()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_particles_anim_loop")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *SpatialMaterial) GetParticlesAnimVFrames() gdnative.Int {
	//log.Println("Calling SpatialMaterial.GetParticlesAnimVFrames()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_particles_anim_v_frames")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetPointSize() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetPointSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_point_size")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetProximityFadeDistance() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetProximityFadeDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_proximity_fade_distance")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetRefraction() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetRefraction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_refraction")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::TextureChannel
*/
func (o *SpatialMaterial) GetRefractionTextureChannel() SpatialMaterialTextureChannel {
	//log.Println("Calling SpatialMaterial.GetRefractionTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_refraction_texture_channel")

	// Call the parent method.
	// enum.SpatialMaterial::TextureChannel
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialTextureChannel(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetRim() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetRim()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_rim")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetRimTint() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetRimTint()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_rim_tint")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetRoughness() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetRoughness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_roughness")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::TextureChannel
*/
func (o *SpatialMaterial) GetRoughnessTextureChannel() SpatialMaterialTextureChannel {
	//log.Println("Calling SpatialMaterial.GetRoughnessTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_roughness_texture_channel")

	// Call the parent method.
	// enum.SpatialMaterial::TextureChannel
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialTextureChannel(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetSpecular() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetSpecular()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_specular")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.SpatialMaterial::SpecularMode
*/
func (o *SpatialMaterial) GetSpecularMode() SpatialMaterialSpecularMode {
	//log.Println("Calling SpatialMaterial.GetSpecularMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_specular_mode")

	// Call the parent method.
	// enum.SpatialMaterial::SpecularMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return SpatialMaterialSpecularMode(ret)
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetSubsurfaceScatteringStrength() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetSubsurfaceScatteringStrength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_subsurface_scattering_strength")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false param int}], Returns: Texture
*/
func (o *SpatialMaterial) GetTexture(param gdnative.Int) TextureImplementer {
	//log.Println("Calling SpatialMaterial.GetTexture()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(param)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_texture")

	// Call the parent method.
	// Texture
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := newTextureFromPointer(retPtr)

	// Check to see if we already have an instance of this object in our Go instance registry.
	if instance, ok := InstanceRegistry.Get(ret.GetBaseObject().ID()); ok {
		return instance.(TextureImplementer)
	}

	// Check to see what kind of class this is and create it. This is generally used with
	// GetNode().
	className := ret.GetClass()
	if className != "Texture" {
		actualRet := getActualClass(className, ret.GetBaseObject())
		return actualRet.(TextureImplementer)
	}

	return &ret
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *SpatialMaterial) GetTransmission() gdnative.Color {
	//log.Println("Calling SpatialMaterial.GetTransmission()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_transmission")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector3
*/
func (o *SpatialMaterial) GetUv1Offset() gdnative.Vector3 {
	//log.Println("Calling SpatialMaterial.GetUv1Offset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv1_offset")

	// Call the parent method.
	// Vector3
	retPtr := gdnative.NewEmptyVector3()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector3FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector3
*/
func (o *SpatialMaterial) GetUv1Scale() gdnative.Vector3 {
	//log.Println("Calling SpatialMaterial.GetUv1Scale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv1_scale")

	// Call the parent method.
	// Vector3
	retPtr := gdnative.NewEmptyVector3()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector3FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetUv1TriplanarBlendSharpness() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetUv1TriplanarBlendSharpness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv1_triplanar_blend_sharpness")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector3
*/
func (o *SpatialMaterial) GetUv2Offset() gdnative.Vector3 {
	//log.Println("Calling SpatialMaterial.GetUv2Offset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv2_offset")

	// Call the parent method.
	// Vector3
	retPtr := gdnative.NewEmptyVector3()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector3FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector3
*/
func (o *SpatialMaterial) GetUv2Scale() gdnative.Vector3 {
	//log.Println("Calling SpatialMaterial.GetUv2Scale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv2_scale")

	// Call the parent method.
	// Vector3
	retPtr := gdnative.NewEmptyVector3()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector3FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *SpatialMaterial) GetUv2TriplanarBlendSharpness() gdnative.Real {
	//log.Println("Calling SpatialMaterial.GetUv2TriplanarBlendSharpness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "get_uv2_triplanar_blend_sharpness")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) IsDepthDeepParallaxEnabled() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.IsDepthDeepParallaxEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "is_depth_deep_parallax_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) IsGrowEnabled() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.IsGrowEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "is_grow_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *SpatialMaterial) IsProximityFadeEnabled() gdnative.Bool {
	//log.Println("Calling SpatialMaterial.IsProximityFadeEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "is_proximity_fade_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false albedo Color}], Returns: void
*/
func (o *SpatialMaterial) SetAlbedo(albedo gdnative.Color) {
	//log.Println("Calling SpatialMaterial.SetAlbedo()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(albedo)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_albedo")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false threshold float}], Returns: void
*/
func (o *SpatialMaterial) SetAlphaScissorThreshold(threshold gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetAlphaScissorThreshold()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(threshold)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_alpha_scissor_threshold")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false anisotropy float}], Returns: void
*/
func (o *SpatialMaterial) SetAnisotropy(anisotropy gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetAnisotropy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(anisotropy)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_anisotropy")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false amount float}], Returns: void
*/
func (o *SpatialMaterial) SetAoLightAffect(amount gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetAoLightAffect()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(amount)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_ao_light_affect")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false channel int}], Returns: void
*/
func (o *SpatialMaterial) SetAoTextureChannel(channel gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetAoTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(channel)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_ao_texture_channel")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false mode int}], Returns: void
*/
func (o *SpatialMaterial) SetBillboardMode(mode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetBillboardMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_billboard_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false blend_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetBlendMode(blendMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetBlendMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(blendMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_blend_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false clearcoat float}], Returns: void
*/
func (o *SpatialMaterial) SetClearcoat(clearcoat gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetClearcoat()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(clearcoat)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_clearcoat")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false clearcoat_gloss float}], Returns: void
*/
func (o *SpatialMaterial) SetClearcoatGloss(clearcoatGloss gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetClearcoatGloss()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(clearcoatGloss)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_clearcoat_gloss")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false cull_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetCullMode(cullMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetCullMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(cullMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_cull_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false enable bool}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDeepParallax(enable gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetDepthDeepParallax()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_deep_parallax")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false flip bool}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDeepParallaxFlipBinormal(flip gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetDepthDeepParallaxFlipBinormal()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(flip)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_deep_parallax_flip_binormal")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false flip bool}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDeepParallaxFlipTangent(flip gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetDepthDeepParallaxFlipTangent()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(flip)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_deep_parallax_flip_tangent")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false layer int}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDeepParallaxMaxLayers(layer gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDepthDeepParallaxMaxLayers()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(layer)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_deep_parallax_max_layers")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false layer int}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDeepParallaxMinLayers(layer gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDepthDeepParallaxMinLayers()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(layer)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_deep_parallax_min_layers")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false depth_draw_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetDepthDrawMode(depthDrawMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDepthDrawMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(depthDrawMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_draw_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false depth_scale float}], Returns: void
*/
func (o *SpatialMaterial) SetDepthScale(depthScale gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetDepthScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(depthScale)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_depth_scale")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false detail_blend_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetDetailBlendMode(detailBlendMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDetailBlendMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(detailBlendMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_detail_blend_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false detail_uv int}], Returns: void
*/
func (o *SpatialMaterial) SetDetailUv(detailUv gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDetailUv()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(detailUv)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_detail_uv")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false diffuse_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetDiffuseMode(diffuseMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDiffuseMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(diffuseMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_diffuse_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false mode int}], Returns: void
*/
func (o *SpatialMaterial) SetDistanceFade(mode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetDistanceFade()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_distance_fade")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false distance float}], Returns: void
*/
func (o *SpatialMaterial) SetDistanceFadeMaxDistance(distance gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetDistanceFadeMaxDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(distance)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_distance_fade_max_distance")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false distance float}], Returns: void
*/
func (o *SpatialMaterial) SetDistanceFadeMinDistance(distance gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetDistanceFadeMinDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(distance)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_distance_fade_min_distance")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false emission Color}], Returns: void
*/
func (o *SpatialMaterial) SetEmission(emission gdnative.Color) {
	//log.Println("Calling SpatialMaterial.SetEmission()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(emission)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_emission")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false emission_energy float}], Returns: void
*/
func (o *SpatialMaterial) SetEmissionEnergy(emissionEnergy gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetEmissionEnergy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(emissionEnergy)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_emission_energy")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false operator int}], Returns: void
*/
func (o *SpatialMaterial) SetEmissionOperator(operator gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetEmissionOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(operator)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_emission_operator")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false feature int} { false enable bool}], Returns: void
*/
func (o *SpatialMaterial) SetFeature(feature gdnative.Int, enable gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetFeature()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(feature)
	ptrArguments[1] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_feature")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false flag int} { false enable bool}], Returns: void
*/
func (o *SpatialMaterial) SetFlag(flag gdnative.Int, enable gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetFlag()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(flag)
	ptrArguments[1] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_flag")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false amount float}], Returns: void
*/
func (o *SpatialMaterial) SetGrow(amount gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetGrow()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(amount)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_grow")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false enable bool}], Returns: void
*/
func (o *SpatialMaterial) SetGrowEnabled(enable gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetGrowEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_grow_enabled")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false line_width float}], Returns: void
*/
func (o *SpatialMaterial) SetLineWidth(lineWidth gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetLineWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(lineWidth)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_line_width")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false metallic float}], Returns: void
*/
func (o *SpatialMaterial) SetMetallic(metallic gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetMetallic()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(metallic)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_metallic")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false channel int}], Returns: void
*/
func (o *SpatialMaterial) SetMetallicTextureChannel(channel gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetMetallicTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(channel)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_metallic_texture_channel")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false normal_scale float}], Returns: void
*/
func (o *SpatialMaterial) SetNormalScale(normalScale gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetNormalScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(normalScale)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_normal_scale")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false frames int}], Returns: void
*/
func (o *SpatialMaterial) SetParticlesAnimHFrames(frames gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetParticlesAnimHFrames()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(frames)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_particles_anim_h_frames")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false loop bool}], Returns: void
*/
func (o *SpatialMaterial) SetParticlesAnimLoop(loop gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetParticlesAnimLoop()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(loop)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_particles_anim_loop")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false frames int}], Returns: void
*/
func (o *SpatialMaterial) SetParticlesAnimVFrames(frames gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetParticlesAnimVFrames()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(frames)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_particles_anim_v_frames")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false point_size float}], Returns: void
*/
func (o *SpatialMaterial) SetPointSize(pointSize gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetPointSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(pointSize)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_point_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false enabled bool}], Returns: void
*/
func (o *SpatialMaterial) SetProximityFade(enabled gdnative.Bool) {
	//log.Println("Calling SpatialMaterial.SetProximityFade()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enabled)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_proximity_fade")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false distance float}], Returns: void
*/
func (o *SpatialMaterial) SetProximityFadeDistance(distance gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetProximityFadeDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(distance)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_proximity_fade_distance")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false refraction float}], Returns: void
*/
func (o *SpatialMaterial) SetRefraction(refraction gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetRefraction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(refraction)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_refraction")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false channel int}], Returns: void
*/
func (o *SpatialMaterial) SetRefractionTextureChannel(channel gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetRefractionTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(channel)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_refraction_texture_channel")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false rim float}], Returns: void
*/
func (o *SpatialMaterial) SetRim(rim gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetRim()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(rim)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_rim")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false rim_tint float}], Returns: void
*/
func (o *SpatialMaterial) SetRimTint(rimTint gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetRimTint()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(rimTint)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_rim_tint")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false roughness float}], Returns: void
*/
func (o *SpatialMaterial) SetRoughness(roughness gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetRoughness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(roughness)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_roughness")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false channel int}], Returns: void
*/
func (o *SpatialMaterial) SetRoughnessTextureChannel(channel gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetRoughnessTextureChannel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(channel)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_roughness_texture_channel")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false specular float}], Returns: void
*/
func (o *SpatialMaterial) SetSpecular(specular gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetSpecular()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(specular)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_specular")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false specular_mode int}], Returns: void
*/
func (o *SpatialMaterial) SetSpecularMode(specularMode gdnative.Int) {
	//log.Println("Calling SpatialMaterial.SetSpecularMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(specularMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_specular_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false strength float}], Returns: void
*/
func (o *SpatialMaterial) SetSubsurfaceScatteringStrength(strength gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetSubsurfaceScatteringStrength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(strength)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_subsurface_scattering_strength")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false param int} { false texture Texture}], Returns: void
*/
func (o *SpatialMaterial) SetTexture(param gdnative.Int, texture TextureImplementer) {
	//log.Println("Calling SpatialMaterial.SetTexture()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(param)
	ptrArguments[1] = gdnative.NewPointerFromObject(texture.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_texture")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false transmission Color}], Returns: void
*/
func (o *SpatialMaterial) SetTransmission(transmission gdnative.Color) {
	//log.Println("Calling SpatialMaterial.SetTransmission()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(transmission)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_transmission")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false offset Vector3}], Returns: void
*/
func (o *SpatialMaterial) SetUv1Offset(offset gdnative.Vector3) {
	//log.Println("Calling SpatialMaterial.SetUv1Offset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector3(offset)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv1_offset")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false scale Vector3}], Returns: void
*/
func (o *SpatialMaterial) SetUv1Scale(scale gdnative.Vector3) {
	//log.Println("Calling SpatialMaterial.SetUv1Scale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector3(scale)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv1_scale")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false sharpness float}], Returns: void
*/
func (o *SpatialMaterial) SetUv1TriplanarBlendSharpness(sharpness gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetUv1TriplanarBlendSharpness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(sharpness)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv1_triplanar_blend_sharpness")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false offset Vector3}], Returns: void
*/
func (o *SpatialMaterial) SetUv2Offset(offset gdnative.Vector3) {
	//log.Println("Calling SpatialMaterial.SetUv2Offset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector3(offset)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv2_offset")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false scale Vector3}], Returns: void
*/
func (o *SpatialMaterial) SetUv2Scale(scale gdnative.Vector3) {
	//log.Println("Calling SpatialMaterial.SetUv2Scale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector3(scale)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv2_scale")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false sharpness float}], Returns: void
*/
func (o *SpatialMaterial) SetUv2TriplanarBlendSharpness(sharpness gdnative.Real) {
	//log.Println("Calling SpatialMaterial.SetUv2TriplanarBlendSharpness()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(sharpness)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("SpatialMaterial", "set_uv2_triplanar_blend_sharpness")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// SpatialMaterialImplementer is an interface that implements the methods
// of the SpatialMaterial class.
type SpatialMaterialImplementer interface {
	MaterialImplementer
	GetAlbedo() gdnative.Color
	GetAlphaScissorThreshold() gdnative.Real
	GetAnisotropy() gdnative.Real
	GetAoLightAffect() gdnative.Real
	GetClearcoat() gdnative.Real
	GetClearcoatGloss() gdnative.Real
	GetDepthDeepParallaxFlipBinormal() gdnative.Bool
	GetDepthDeepParallaxFlipTangent() gdnative.Bool
	GetDepthDeepParallaxMaxLayers() gdnative.Int
	GetDepthDeepParallaxMinLayers() gdnative.Int
	GetDepthScale() gdnative.Real
	GetDistanceFadeMaxDistance() gdnative.Real
	GetDistanceFadeMinDistance() gdnative.Real
	GetEmission() gdnative.Color
	GetEmissionEnergy() gdnative.Real
	GetFeature(feature gdnative.Int) gdnative.Bool
	GetFlag(flag gdnative.Int) gdnative.Bool
	GetGrow() gdnative.Real
	GetLineWidth() gdnative.Real
	GetMetallic() gdnative.Real
	GetNormalScale() gdnative.Real
	GetParticlesAnimHFrames() gdnative.Int
	GetParticlesAnimLoop() gdnative.Bool
	GetParticlesAnimVFrames() gdnative.Int
	GetPointSize() gdnative.Real
	GetProximityFadeDistance() gdnative.Real
	GetRefraction() gdnative.Real
	GetRim() gdnative.Real
	GetRimTint() gdnative.Real
	GetRoughness() gdnative.Real
	GetSpecular() gdnative.Real
	GetSubsurfaceScatteringStrength() gdnative.Real
	GetTexture(param gdnative.Int) TextureImplementer
	GetTransmission() gdnative.Color
	GetUv1Offset() gdnative.Vector3
	GetUv1Scale() gdnative.Vector3
	GetUv1TriplanarBlendSharpness() gdnative.Real
	GetUv2Offset() gdnative.Vector3
	GetUv2Scale() gdnative.Vector3
	GetUv2TriplanarBlendSharpness() gdnative.Real
	IsDepthDeepParallaxEnabled() gdnative.Bool
	IsGrowEnabled() gdnative.Bool
	IsProximityFadeEnabled() gdnative.Bool
	SetAlbedo(albedo gdnative.Color)
	SetAlphaScissorThreshold(threshold gdnative.Real)
	SetAnisotropy(anisotropy gdnative.Real)
	SetAoLightAffect(amount gdnative.Real)
	SetAoTextureChannel(channel gdnative.Int)
	SetBillboardMode(mode gdnative.Int)
	SetBlendMode(blendMode gdnative.Int)
	SetClearcoat(clearcoat gdnative.Real)
	SetClearcoatGloss(clearcoatGloss gdnative.Real)
	SetCullMode(cullMode gdnative.Int)
	SetDepthDeepParallax(enable gdnative.Bool)
	SetDepthDeepParallaxFlipBinormal(flip gdnative.Bool)
	SetDepthDeepParallaxFlipTangent(flip gdnative.Bool)
	SetDepthDeepParallaxMaxLayers(layer gdnative.Int)
	SetDepthDeepParallaxMinLayers(layer gdnative.Int)
	SetDepthDrawMode(depthDrawMode gdnative.Int)
	SetDepthScale(depthScale gdnative.Real)
	SetDetailBlendMode(detailBlendMode gdnative.Int)
	SetDetailUv(detailUv gdnative.Int)
	SetDiffuseMode(diffuseMode gdnative.Int)
	SetDistanceFade(mode gdnative.Int)
	SetDistanceFadeMaxDistance(distance gdnative.Real)
	SetDistanceFadeMinDistance(distance gdnative.Real)
	SetEmission(emission gdnative.Color)
	SetEmissionEnergy(emissionEnergy gdnative.Real)
	SetEmissionOperator(operator gdnative.Int)
	SetFeature(feature gdnative.Int, enable gdnative.Bool)
	SetFlag(flag gdnative.Int, enable gdnative.Bool)
	SetGrow(amount gdnative.Real)
	SetGrowEnabled(enable gdnative.Bool)
	SetLineWidth(lineWidth gdnative.Real)
	SetMetallic(metallic gdnative.Real)
	SetMetallicTextureChannel(channel gdnative.Int)
	SetNormalScale(normalScale gdnative.Real)
	SetParticlesAnimHFrames(frames gdnative.Int)
	SetParticlesAnimLoop(loop gdnative.Bool)
	SetParticlesAnimVFrames(frames gdnative.Int)
	SetPointSize(pointSize gdnative.Real)
	SetProximityFade(enabled gdnative.Bool)
	SetProximityFadeDistance(distance gdnative.Real)
	SetRefraction(refraction gdnative.Real)
	SetRefractionTextureChannel(channel gdnative.Int)
	SetRim(rim gdnative.Real)
	SetRimTint(rimTint gdnative.Real)
	SetRoughness(roughness gdnative.Real)
	SetRoughnessTextureChannel(channel gdnative.Int)
	SetSpecular(specular gdnative.Real)
	SetSpecularMode(specularMode gdnative.Int)
	SetSubsurfaceScatteringStrength(strength gdnative.Real)
	SetTexture(param gdnative.Int, texture TextureImplementer)
	SetTransmission(transmission gdnative.Color)
	SetUv1Offset(offset gdnative.Vector3)
	SetUv1Scale(scale gdnative.Vector3)
	SetUv1TriplanarBlendSharpness(sharpness gdnative.Real)
	SetUv2Offset(offset gdnative.Vector3)
	SetUv2Scale(scale gdnative.Vector3)
	SetUv2TriplanarBlendSharpness(sharpness gdnative.Real)
}
