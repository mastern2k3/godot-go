package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewStyleBoxFlatFromPointer(ptr gdnative.Pointer) StyleBoxFlat {
func newStyleBoxFlatFromPointer(ptr gdnative.Pointer) StyleBoxFlat {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := StyleBoxFlat{}
	obj.SetBaseObject(owner)

	return obj
}

/*
This stylebox can be used to achieve all kinds of looks without the need of a texture. Those properties are customizable: - Color - Border width (individual width for each border) - Rounded corners (individual radius for each corner) - Shadow Setting corner radius to high values is allowed. As soon as corners would overlap the stylebox will switch to a relative system. Example: [codeblock] height = 30 corner_radius_top_left = 50 corner_radius_bottom_left = 100 [/codeblock] The relative system now would take the 1:2 ratio of the two left corners to calculate the actual corner width. Both corners added will [b]never[/b] be more than the height. Result: [codeblock] corner_radius_top_left: 10 corner_radius_bottom_left: 20 [/codeblock]
*/
type StyleBoxFlat struct {
	StyleBox
	owner gdnative.Object
}

func (o *StyleBoxFlat) BaseClass() string {
	return "StyleBoxFlat"
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *StyleBoxFlat) GetAaSize() gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetAaSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_aa_size")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *StyleBoxFlat) GetBgColor() gdnative.Color {
	//log.Println("Calling StyleBoxFlat.GetBgColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_bg_color")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *StyleBoxFlat) GetBorderBlend() gdnative.Bool {
	//log.Println("Calling StyleBoxFlat.GetBorderBlend()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_border_blend")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *StyleBoxFlat) GetBorderColor() gdnative.Color {
	//log.Println("Calling StyleBoxFlat.GetBorderColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_border_color")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false margin int}], Returns: int
*/
func (o *StyleBoxFlat) GetBorderWidth(margin gdnative.Int) gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetBorderWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(margin)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_border_width")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*

	Args: [], Returns: int
*/
func (o *StyleBoxFlat) GetBorderWidthMin() gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetBorderWidthMin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_border_width_min")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *StyleBoxFlat) GetCornerDetail() gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetCornerDetail()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_corner_detail")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false corner int}], Returns: int
*/
func (o *StyleBoxFlat) GetCornerRadius(corner gdnative.Int) gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetCornerRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(corner)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_corner_radius")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false margin int}], Returns: float
*/
func (o *StyleBoxFlat) GetExpandMargin(margin gdnative.Int) gdnative.Real {
	//log.Println("Calling StyleBoxFlat.GetExpandMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(margin)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_expand_margin")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Color
*/
func (o *StyleBoxFlat) GetShadowColor() gdnative.Color {
	//log.Println("Calling StyleBoxFlat.GetShadowColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_shadow_color")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *StyleBoxFlat) GetShadowSize() gdnative.Int {
	//log.Println("Calling StyleBoxFlat.GetShadowSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "get_shadow_size")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *StyleBoxFlat) IsAntiAliased() gdnative.Bool {
	//log.Println("Calling StyleBoxFlat.IsAntiAliased()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "is_anti_aliased")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *StyleBoxFlat) IsDrawCenterEnabled() gdnative.Bool {
	//log.Println("Calling StyleBoxFlat.IsDrawCenterEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "is_draw_center_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false size int}], Returns: void
*/
func (o *StyleBoxFlat) SetAaSize(size gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetAaSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(size)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_aa_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false anti_aliased bool}], Returns: void
*/
func (o *StyleBoxFlat) SetAntiAliased(antiAliased gdnative.Bool) {
	//log.Println("Calling StyleBoxFlat.SetAntiAliased()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(antiAliased)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_anti_aliased")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false color Color}], Returns: void
*/
func (o *StyleBoxFlat) SetBgColor(color gdnative.Color) {
	//log.Println("Calling StyleBoxFlat.SetBgColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(color)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_bg_color")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false blend bool}], Returns: void
*/
func (o *StyleBoxFlat) SetBorderBlend(blend gdnative.Bool) {
	//log.Println("Calling StyleBoxFlat.SetBorderBlend()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(blend)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_border_blend")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false color Color}], Returns: void
*/
func (o *StyleBoxFlat) SetBorderColor(color gdnative.Color) {
	//log.Println("Calling StyleBoxFlat.SetBorderColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(color)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_border_color")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false margin int} { false width int}], Returns: void
*/
func (o *StyleBoxFlat) SetBorderWidth(margin gdnative.Int, width gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetBorderWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(margin)
	ptrArguments[1] = gdnative.NewPointerFromInt(width)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_border_width")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false width int}], Returns: void
*/
func (o *StyleBoxFlat) SetBorderWidthAll(width gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetBorderWidthAll()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(width)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_border_width_all")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false detail int}], Returns: void
*/
func (o *StyleBoxFlat) SetCornerDetail(detail gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetCornerDetail()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(detail)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_corner_detail")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false corner int} { false radius int}], Returns: void
*/
func (o *StyleBoxFlat) SetCornerRadius(corner gdnative.Int, radius gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetCornerRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(corner)
	ptrArguments[1] = gdnative.NewPointerFromInt(radius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_corner_radius")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false radius int}], Returns: void
*/
func (o *StyleBoxFlat) SetCornerRadiusAll(radius gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetCornerRadiusAll()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(radius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_corner_radius_all")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false radius_top_left int} { false radius_top_right int} { false radius_bottom_right int} { false radius_bottom_left int}], Returns: void
*/
func (o *StyleBoxFlat) SetCornerRadiusIndividual(radiusTopLeft gdnative.Int, radiusTopRight gdnative.Int, radiusBottomRight gdnative.Int, radiusBottomLeft gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetCornerRadiusIndividual()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 4, 4)
	ptrArguments[0] = gdnative.NewPointerFromInt(radiusTopLeft)
	ptrArguments[1] = gdnative.NewPointerFromInt(radiusTopRight)
	ptrArguments[2] = gdnative.NewPointerFromInt(radiusBottomRight)
	ptrArguments[3] = gdnative.NewPointerFromInt(radiusBottomLeft)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_corner_radius_individual")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false draw_center bool}], Returns: void
*/
func (o *StyleBoxFlat) SetDrawCenter(drawCenter gdnative.Bool) {
	//log.Println("Calling StyleBoxFlat.SetDrawCenter()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(drawCenter)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_draw_center")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false margin int} { false size float}], Returns: void
*/
func (o *StyleBoxFlat) SetExpandMargin(margin gdnative.Int, size gdnative.Real) {
	//log.Println("Calling StyleBoxFlat.SetExpandMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(margin)
	ptrArguments[1] = gdnative.NewPointerFromReal(size)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_expand_margin")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false size float}], Returns: void
*/
func (o *StyleBoxFlat) SetExpandMarginAll(size gdnative.Real) {
	//log.Println("Calling StyleBoxFlat.SetExpandMarginAll()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(size)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_expand_margin_all")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false size_left float} { false size_top float} { false size_right float} { false size_bottom float}], Returns: void
*/
func (o *StyleBoxFlat) SetExpandMarginIndividual(sizeLeft gdnative.Real, sizeTop gdnative.Real, sizeRight gdnative.Real, sizeBottom gdnative.Real) {
	//log.Println("Calling StyleBoxFlat.SetExpandMarginIndividual()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 4, 4)
	ptrArguments[0] = gdnative.NewPointerFromReal(sizeLeft)
	ptrArguments[1] = gdnative.NewPointerFromReal(sizeTop)
	ptrArguments[2] = gdnative.NewPointerFromReal(sizeRight)
	ptrArguments[3] = gdnative.NewPointerFromReal(sizeBottom)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_expand_margin_individual")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false color Color}], Returns: void
*/
func (o *StyleBoxFlat) SetShadowColor(color gdnative.Color) {
	//log.Println("Calling StyleBoxFlat.SetShadowColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(color)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_shadow_color")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false size int}], Returns: void
*/
func (o *StyleBoxFlat) SetShadowSize(size gdnative.Int) {
	//log.Println("Calling StyleBoxFlat.SetShadowSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(size)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StyleBoxFlat", "set_shadow_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// StyleBoxFlatImplementer is an interface that implements the methods
// of the StyleBoxFlat class.
type StyleBoxFlatImplementer interface {
	StyleBoxImplementer
	GetAaSize() gdnative.Int
	GetBgColor() gdnative.Color
	GetBorderBlend() gdnative.Bool
	GetBorderColor() gdnative.Color
	GetBorderWidth(margin gdnative.Int) gdnative.Int
	GetBorderWidthMin() gdnative.Int
	GetCornerDetail() gdnative.Int
	GetCornerRadius(corner gdnative.Int) gdnative.Int
	GetExpandMargin(margin gdnative.Int) gdnative.Real
	GetShadowColor() gdnative.Color
	GetShadowSize() gdnative.Int
	IsAntiAliased() gdnative.Bool
	IsDrawCenterEnabled() gdnative.Bool
	SetAaSize(size gdnative.Int)
	SetAntiAliased(antiAliased gdnative.Bool)
	SetBgColor(color gdnative.Color)
	SetBorderBlend(blend gdnative.Bool)
	SetBorderColor(color gdnative.Color)
	SetBorderWidth(margin gdnative.Int, width gdnative.Int)
	SetBorderWidthAll(width gdnative.Int)
	SetCornerDetail(detail gdnative.Int)
	SetCornerRadius(corner gdnative.Int, radius gdnative.Int)
	SetCornerRadiusAll(radius gdnative.Int)
	SetCornerRadiusIndividual(radiusTopLeft gdnative.Int, radiusTopRight gdnative.Int, radiusBottomRight gdnative.Int, radiusBottomLeft gdnative.Int)
	SetDrawCenter(drawCenter gdnative.Bool)
	SetExpandMargin(margin gdnative.Int, size gdnative.Real)
	SetExpandMarginAll(size gdnative.Real)
	SetExpandMarginIndividual(sizeLeft gdnative.Real, sizeTop gdnative.Real, sizeRight gdnative.Real, sizeBottom gdnative.Real)
	SetShadowColor(color gdnative.Color)
	SetShadowSize(size gdnative.Int)
}
