package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewScriptCreateDialogFromPointer(ptr gdnative.Pointer) ScriptCreateDialog {
func newScriptCreateDialogFromPointer(ptr gdnative.Pointer) ScriptCreateDialog {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ScriptCreateDialog{}
	obj.SetBaseObject(owner)

	return obj
}

/*
The [code]ScriptCreateDialog[/code] creates script files according to a given template for a given scripting language. The standard use is to configure its fields prior to calling one of the [method Popup.popup] methods. [codeblock] func _ready(): dialog.config("Node", "res://new_node.gd") # for in-engine types dialog.config("\"res://base_node.gd\"", "res://derived_node.gd") # for script types dialog.popup_centered() [/codeblock]
*/
type ScriptCreateDialog struct {
	ConfirmationDialog
	owner gdnative.Object
}

func (o *ScriptCreateDialog) BaseClass() string {
	return "ScriptCreateDialog"
}

/*
        Undocumented
	Args: [{ false arg0 bool} { false arg1 bool}], Returns: void
*/
func (o *ScriptCreateDialog) X_BrowsePath(arg0 gdnative.Bool, arg1 gdnative.Bool) {
	//log.Println("Calling ScriptCreateDialog.X_BrowsePath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromBool(arg0)
	ptrArguments[1] = gdnative.NewPointerFromBool(arg1)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_browse_path")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptCreateDialog) X_BuiltInPressed() {
	//log.Println("Calling ScriptCreateDialog.X_BuiltInPressed()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_built_in_pressed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptCreateDialog) X_ClassNameChanged(arg0 gdnative.String) {
	//log.Println("Calling ScriptCreateDialog.X_ClassNameChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_class_name_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptCreateDialog) X_FileSelected(arg0 gdnative.String) {
	//log.Println("Calling ScriptCreateDialog.X_FileSelected()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_file_selected")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptCreateDialog) X_LangChanged(arg0 gdnative.Int) {
	//log.Println("Calling ScriptCreateDialog.X_LangChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_lang_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptCreateDialog) X_ParentNameChanged(arg0 gdnative.String) {
	//log.Println("Calling ScriptCreateDialog.X_ParentNameChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_parent_name_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptCreateDialog) X_PathChanged(arg0 gdnative.String) {
	//log.Println("Calling ScriptCreateDialog.X_PathChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_path_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptCreateDialog) X_PathEntered(arg0 gdnative.String) {
	//log.Println("Calling ScriptCreateDialog.X_PathEntered()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_path_entered")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptCreateDialog) X_TemplateChanged(arg0 gdnative.Int) {
	//log.Println("Calling ScriptCreateDialog.X_TemplateChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "_template_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Prefills required fields to configure the ScriptCreateDialog for use.
	Args: [{ false inherits String} { false path String} {True true built_in_enabled bool}], Returns: void
*/
func (o *ScriptCreateDialog) Config(inherits gdnative.String, path gdnative.String, builtInEnabled gdnative.Bool) {
	//log.Println("Calling ScriptCreateDialog.Config()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromString(inherits)
	ptrArguments[1] = gdnative.NewPointerFromString(path)
	ptrArguments[2] = gdnative.NewPointerFromBool(builtInEnabled)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptCreateDialog", "config")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// ScriptCreateDialogImplementer is an interface that implements the methods
// of the ScriptCreateDialog class.
type ScriptCreateDialogImplementer interface {
	ConfirmationDialogImplementer
	X_BrowsePath(arg0 gdnative.Bool, arg1 gdnative.Bool)
	X_BuiltInPressed()
	X_ClassNameChanged(arg0 gdnative.String)
	X_FileSelected(arg0 gdnative.String)
	X_LangChanged(arg0 gdnative.Int)
	X_ParentNameChanged(arg0 gdnative.String)
	X_PathChanged(arg0 gdnative.String)
	X_PathEntered(arg0 gdnative.String)
	X_TemplateChanged(arg0 gdnative.Int)
	Config(inherits gdnative.String, path gdnative.String, builtInEnabled gdnative.Bool)
}
