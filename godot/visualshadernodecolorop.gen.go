package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// VisualShaderNodeColorOpOperator is an enum for Operator values.
type VisualShaderNodeColorOpOperator int

const (
	VisualShaderNodeColorOpOpBurn       VisualShaderNodeColorOpOperator = 6
	VisualShaderNodeColorOpOpDarken     VisualShaderNodeColorOpOperator = 2
	VisualShaderNodeColorOpOpDifference VisualShaderNodeColorOpOperator = 1
	VisualShaderNodeColorOpOpDodge      VisualShaderNodeColorOpOperator = 5
	VisualShaderNodeColorOpOpHardLight  VisualShaderNodeColorOpOperator = 8
	VisualShaderNodeColorOpOpLighten    VisualShaderNodeColorOpOperator = 3
	VisualShaderNodeColorOpOpOverlay    VisualShaderNodeColorOpOperator = 4
	VisualShaderNodeColorOpOpScreen     VisualShaderNodeColorOpOperator = 0
	VisualShaderNodeColorOpOpSoftLight  VisualShaderNodeColorOpOperator = 7
)

//func NewVisualShaderNodeColorOpFromPointer(ptr gdnative.Pointer) VisualShaderNodeColorOp {
func newVisualShaderNodeColorOpFromPointer(ptr gdnative.Pointer) VisualShaderNodeColorOp {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeColorOp{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type VisualShaderNodeColorOp struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeColorOp) BaseClass() string {
	return "VisualShaderNodeColorOp"
}

/*
        Undocumented
	Args: [], Returns: enum.VisualShaderNodeColorOp::Operator
*/
func (o *VisualShaderNodeColorOp) GetOperator() VisualShaderNodeColorOpOperator {
	//log.Println("Calling VisualShaderNodeColorOp.GetOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeColorOp", "get_operator")

	// Call the parent method.
	// enum.VisualShaderNodeColorOp::Operator
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return VisualShaderNodeColorOpOperator(ret)
}

/*
        Undocumented
	Args: [{ false op int}], Returns: void
*/
func (o *VisualShaderNodeColorOp) SetOperator(op gdnative.Int) {
	//log.Println("Calling VisualShaderNodeColorOp.SetOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(op)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeColorOp", "set_operator")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualShaderNodeColorOpImplementer is an interface that implements the methods
// of the VisualShaderNodeColorOp class.
type VisualShaderNodeColorOpImplementer interface {
	VisualShaderNodeImplementer
	SetOperator(op gdnative.Int)
}
