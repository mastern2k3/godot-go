package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// WebSocketPeerWriteMode is an enum for WriteMode values.
type WebSocketPeerWriteMode int

const (
	WebSocketPeerWriteModeBinary WebSocketPeerWriteMode = 1
	WebSocketPeerWriteModeText   WebSocketPeerWriteMode = 0
)

//func NewWebSocketPeerFromPointer(ptr gdnative.Pointer) WebSocketPeer {
func newWebSocketPeerFromPointer(ptr gdnative.Pointer) WebSocketPeer {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := WebSocketPeer{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type WebSocketPeer struct {
	PacketPeer
	owner gdnative.Object
}

func (o *WebSocketPeer) BaseClass() string {
	return "WebSocketPeer"
}

/*
        Undocumented
	Args: [{1000 true code int} { true reason String}], Returns: void
*/
func (o *WebSocketPeer) Close(code gdnative.Int, reason gdnative.String) {
	//log.Println("Calling WebSocketPeer.Close()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(code)
	ptrArguments[1] = gdnative.NewPointerFromString(reason)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "close")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *WebSocketPeer) GetConnectedHost() gdnative.String {
	//log.Println("Calling WebSocketPeer.GetConnectedHost()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "get_connected_host")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *WebSocketPeer) GetConnectedPort() gdnative.Int {
	//log.Println("Calling WebSocketPeer.GetConnectedPort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "get_connected_port")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.WebSocketPeer::WriteMode
*/
func (o *WebSocketPeer) GetWriteMode() WebSocketPeerWriteMode {
	//log.Println("Calling WebSocketPeer.GetWriteMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "get_write_mode")

	// Call the parent method.
	// enum.WebSocketPeer::WriteMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return WebSocketPeerWriteMode(ret)
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *WebSocketPeer) IsConnectedToHost() gdnative.Bool {
	//log.Println("Calling WebSocketPeer.IsConnectedToHost()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "is_connected_to_host")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false mode int}], Returns: void
*/
func (o *WebSocketPeer) SetWriteMode(mode gdnative.Int) {
	//log.Println("Calling WebSocketPeer.SetWriteMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "set_write_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *WebSocketPeer) WasStringPacket() gdnative.Bool {
	//log.Println("Calling WebSocketPeer.WasStringPacket()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "was_string_packet")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

// WebSocketPeerImplementer is an interface that implements the methods
// of the WebSocketPeer class.
type WebSocketPeerImplementer interface {
	PacketPeerImplementer
	Close(code gdnative.Int, reason gdnative.String)
	GetConnectedHost() gdnative.String
	GetConnectedPort() gdnative.Int
	IsConnectedToHost() gdnative.Bool
	SetWriteMode(mode gdnative.Int)
	WasStringPacket() gdnative.Bool
}
