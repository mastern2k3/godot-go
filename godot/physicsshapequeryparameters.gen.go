package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewPhysicsShapeQueryParametersFromPointer(ptr gdnative.Pointer) PhysicsShapeQueryParameters {
func newPhysicsShapeQueryParametersFromPointer(ptr gdnative.Pointer) PhysicsShapeQueryParameters {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := PhysicsShapeQueryParameters{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type PhysicsShapeQueryParameters struct {
	Reference
	owner gdnative.Object
}

func (o *PhysicsShapeQueryParameters) BaseClass() string {
	return "PhysicsShapeQueryParameters"
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *PhysicsShapeQueryParameters) GetCollisionMask() gdnative.Int {
	//log.Println("Calling PhysicsShapeQueryParameters.GetCollisionMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_collision_mask")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Array
*/
func (o *PhysicsShapeQueryParameters) GetExclude() gdnative.Array {
	//log.Println("Calling PhysicsShapeQueryParameters.GetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_exclude")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *PhysicsShapeQueryParameters) GetMargin() gdnative.Real {
	//log.Println("Calling PhysicsShapeQueryParameters.GetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_margin")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: RID
*/
func (o *PhysicsShapeQueryParameters) GetShapeRid() gdnative.Rid {
	//log.Println("Calling PhysicsShapeQueryParameters.GetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_shape_rid")

	// Call the parent method.
	// RID
	retPtr := gdnative.NewEmptyRid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRidFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Transform
*/
func (o *PhysicsShapeQueryParameters) GetTransform() gdnative.Transform {
	//log.Println("Calling PhysicsShapeQueryParameters.GetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_transform")

	// Call the parent method.
	// Transform
	retPtr := gdnative.NewEmptyTransform()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewTransformFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *PhysicsShapeQueryParameters) IsCollideWithAreasEnabled() gdnative.Bool {
	//log.Println("Calling PhysicsShapeQueryParameters.IsCollideWithAreasEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "is_collide_with_areas_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *PhysicsShapeQueryParameters) IsCollideWithBodiesEnabled() gdnative.Bool {
	//log.Println("Calling PhysicsShapeQueryParameters.IsCollideWithBodiesEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "is_collide_with_bodies_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false enable bool}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetCollideWithAreas(enable gdnative.Bool) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetCollideWithAreas()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_collide_with_areas")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false enable bool}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetCollideWithBodies(enable gdnative.Bool) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetCollideWithBodies()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enable)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_collide_with_bodies")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false collision_mask int}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetCollisionMask(collisionMask gdnative.Int) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetCollisionMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(collisionMask)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_collision_mask")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false exclude Array}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetExclude(exclude gdnative.Array) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromArray(exclude)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_exclude")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false margin float}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetMargin(margin gdnative.Real) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(margin)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_margin")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false shape Resource}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetShape(shape ResourceImplementer) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetShape()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_shape")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false shape RID}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetShapeRid(shape gdnative.Rid) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromRid(shape)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_shape_rid")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false transform Transform}], Returns: void
*/
func (o *PhysicsShapeQueryParameters) SetTransform(transform gdnative.Transform) {
	//log.Println("Calling PhysicsShapeQueryParameters.SetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromTransform(transform)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_transform")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// PhysicsShapeQueryParametersImplementer is an interface that implements the methods
// of the PhysicsShapeQueryParameters class.
type PhysicsShapeQueryParametersImplementer interface {
	ReferenceImplementer
	GetCollisionMask() gdnative.Int
	GetExclude() gdnative.Array
	GetMargin() gdnative.Real
	GetShapeRid() gdnative.Rid
	GetTransform() gdnative.Transform
	IsCollideWithAreasEnabled() gdnative.Bool
	IsCollideWithBodiesEnabled() gdnative.Bool
	SetCollideWithAreas(enable gdnative.Bool)
	SetCollideWithBodies(enable gdnative.Bool)
	SetCollisionMask(collisionMask gdnative.Int)
	SetExclude(exclude gdnative.Array)
	SetMargin(margin gdnative.Real)
	SetShape(shape ResourceImplementer)
	SetShapeRid(shape gdnative.Rid)
	SetTransform(transform gdnative.Transform)
}
