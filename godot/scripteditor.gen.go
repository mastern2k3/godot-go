package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewScriptEditorFromPointer(ptr gdnative.Pointer) ScriptEditor {
func newScriptEditorFromPointer(ptr gdnative.Pointer) ScriptEditor {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ScriptEditor{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type ScriptEditor struct {
	PanelContainer
	owner gdnative.Object
}

func (o *ScriptEditor) BaseClass() string {
	return "ScriptEditor"
}

/*
        Undocumented
	Args: [{ false arg0 Object} { false arg1 String} { false arg2 PoolStringArray}], Returns: void
*/
func (o *ScriptEditor) X_AddCallback(arg0 ObjectImplementer, arg1 gdnative.String, arg2 gdnative.PoolStringArray) {
	//log.Println("Calling ScriptEditor.X_AddCallback()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())
	ptrArguments[1] = gdnative.NewPointerFromString(arg1)
	ptrArguments[2] = gdnative.NewPointerFromPoolStringArray(arg2)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_add_callback")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_AutosaveScripts() {
	//log.Println("Calling ScriptEditor.X_AutosaveScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_autosave_scripts")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 bool} { false arg1 bool}], Returns: void
*/
func (o *ScriptEditor) X_Breaked(arg0 gdnative.Bool, arg1 gdnative.Bool) {
	//log.Println("Calling ScriptEditor.X_Breaked()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromBool(arg0)
	ptrArguments[1] = gdnative.NewPointerFromBool(arg1)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_breaked")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_CloseAllTabs() {
	//log.Println("Calling ScriptEditor.X_CloseAllTabs()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_close_all_tabs")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_CloseCurrentTab() {
	//log.Println("Calling ScriptEditor.X_CloseCurrentTab()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_close_current_tab")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_CloseDiscardCurrentTab(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_CloseDiscardCurrentTab()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_close_discard_current_tab")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_CloseDocsTab() {
	//log.Println("Calling ScriptEditor.X_CloseDocsTab()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_close_docs_tab")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_CloseOtherTabs() {
	//log.Println("Calling ScriptEditor.X_CloseOtherTabs()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_close_other_tabs")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_CopyScriptPath() {
	//log.Println("Calling ScriptEditor.X_CopyScriptPath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_copy_script_path")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_EditorPause() {
	//log.Println("Calling ScriptEditor.X_EditorPause()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_editor_pause")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_EditorPlay() {
	//log.Println("Calling ScriptEditor.X_EditorPlay()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_editor_play")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_EditorSettingsChanged() {
	//log.Println("Calling ScriptEditor.X_EditorSettingsChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_editor_settings_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_EditorStop() {
	//log.Println("Calling ScriptEditor.X_EditorStop()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_editor_stop")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_FileDialogAction(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_FileDialogAction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_file_dialog_action")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String} { false arg1 Object}], Returns: String
*/
func (o *ScriptEditor) X_GetDebugTooltip(arg0 gdnative.String, arg1 ObjectImplementer) gdnative.String {
	//log.Println("Calling ScriptEditor.X_GetDebugTooltip()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)
	ptrArguments[1] = gdnative.NewPointerFromObject(arg1.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_get_debug_tooltip")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false arg0 Reference} { false arg1 int}], Returns: void
*/
func (o *ScriptEditor) X_GotoScriptLine(arg0 ReferenceImplementer, arg1 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_GotoScriptLine()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())
	ptrArguments[1] = gdnative.NewPointerFromInt(arg1)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_goto_script_line")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_GotoScriptLine2(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_GotoScriptLine2()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_goto_script_line2")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_HelpClassGoto(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_HelpClassGoto()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_help_class_goto")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_HelpClassOpen(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_HelpClassOpen()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_help_class_open")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_HelpOverviewSelected(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_HelpOverviewSelected()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_help_overview_selected")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_HelpSearch(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_HelpSearch()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_help_search")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_HistoryBack() {
	//log.Println("Calling ScriptEditor.X_HistoryBack()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_history_back")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_HistoryForward() {
	//log.Println("Calling ScriptEditor.X_HistoryForward()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_history_forward")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_LiveAutoReloadRunningScripts() {
	//log.Println("Calling ScriptEditor.X_LiveAutoReloadRunningScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_live_auto_reload_running_scripts")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_MembersOverviewSelected(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_MembersOverviewSelected()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_members_overview_selected")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_MenuOption(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_MenuOption()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_menu_option")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 PoolStringArray}], Returns: void
*/
func (o *ScriptEditor) X_OnFindInFilesModifiedFiles(arg0 gdnative.PoolStringArray) {
	//log.Println("Calling ScriptEditor.X_OnFindInFilesModifiedFiles()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolStringArray(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_on_find_in_files_modified_files")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_OnFindInFilesRequested(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_OnFindInFilesRequested()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_on_find_in_files_requested")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String} { false arg1 int} { false arg2 int} { false arg3 int}], Returns: void
*/
func (o *ScriptEditor) X_OnFindInFilesResultSelected(arg0 gdnative.String, arg1 gdnative.Int, arg2 gdnative.Int, arg3 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_OnFindInFilesResultSelected()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 4, 4)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)
	ptrArguments[1] = gdnative.NewPointerFromInt(arg1)
	ptrArguments[2] = gdnative.NewPointerFromInt(arg2)
	ptrArguments[3] = gdnative.NewPointerFromInt(arg3)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_on_find_in_files_result_selected")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_OpenRecentScript(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_OpenRecentScript()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_open_recent_script")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_ReloadScripts() {
	//log.Println("Calling ScriptEditor.X_ReloadScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_reload_scripts")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_RequestHelp(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_RequestHelp()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_request_help")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 Resource}], Returns: void
*/
func (o *ScriptEditor) X_ResSavedCallback(arg0 ResourceImplementer) {
	//log.Println("Calling ScriptEditor.X_ResSavedCallback()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_res_saved_callback")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 String}], Returns: void
*/
func (o *ScriptEditor) X_ResaveScripts(arg0 gdnative.String) {
	//log.Println("Calling ScriptEditor.X_ResaveScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_resave_scripts")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_SaveHistory() {
	//log.Println("Calling ScriptEditor.X_SaveHistory()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_save_history")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_ScriptChanged() {
	//log.Println("Calling ScriptEditor.X_ScriptChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_script_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 Script}], Returns: void
*/
func (o *ScriptEditor) X_ScriptCreated(arg0 ScriptImplementer) {
	//log.Println("Calling ScriptEditor.X_ScriptCreated()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_script_created")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 InputEvent}], Returns: void
*/
func (o *ScriptEditor) X_ScriptListGuiInput(arg0 InputEventImplementer) {
	//log.Println("Calling ScriptEditor.X_ScriptListGuiInput()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_script_list_gui_input")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_ScriptSelected(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_ScriptSelected()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_script_selected")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 float}], Returns: void
*/
func (o *ScriptEditor) X_ScriptSplitDragged(arg0 gdnative.Real) {
	//log.Println("Calling ScriptEditor.X_ScriptSplitDragged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_script_split_dragged")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 bool}], Returns: void
*/
func (o *ScriptEditor) X_ShowDebugger(arg0 gdnative.Bool) {
	//log.Println("Calling ScriptEditor.X_ShowDebugger()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_show_debugger")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 bool}], Returns: void
*/
func (o *ScriptEditor) X_StartFindInFiles(arg0 gdnative.Bool) {
	//log.Println("Calling ScriptEditor.X_StartFindInFiles()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_start_find_in_files")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_TabChanged(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_TabChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_tab_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 int}], Returns: void
*/
func (o *ScriptEditor) X_ThemeOption(arg0 gdnative.Int) {
	//log.Println("Calling ScriptEditor.X_ThemeOption()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_theme_option")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 bool}], Returns: void
*/
func (o *ScriptEditor) X_ToggleMembersOverviewAlphaSort(arg0 gdnative.Bool) {
	//log.Println("Calling ScriptEditor.X_ToggleMembersOverviewAlphaSort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(arg0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_toggle_members_overview_alpha_sort")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_TreeChanged() {
	//log.Println("Calling ScriptEditor.X_TreeChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_tree_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false arg0 InputEvent}], Returns: void
*/
func (o *ScriptEditor) X_UnhandledInput(arg0 InputEventImplementer) {
	//log.Println("Calling ScriptEditor.X_UnhandledInput()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(arg0.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_unhandled_input")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_UpdateMembersOverview() {
	//log.Println("Calling ScriptEditor.X_UpdateMembersOverview()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_update_members_overview")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_UpdateRecentScripts() {
	//log.Println("Calling ScriptEditor.X_UpdateRecentScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_update_recent_scripts")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *ScriptEditor) X_UpdateScriptNames() {
	//log.Println("Calling ScriptEditor.X_UpdateScriptNames()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "_update_script_names")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false point Vector2} { false data Variant} { false from Object}], Returns: bool
*/
func (o *ScriptEditor) CanDropDataFw(point gdnative.Vector2, data gdnative.Variant, from ObjectImplementer) gdnative.Bool {
	//log.Println("Calling ScriptEditor.CanDropDataFw()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromVector2(point)
	ptrArguments[1] = gdnative.NewPointerFromVariant(data)
	ptrArguments[2] = gdnative.NewPointerFromObject(from.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "can_drop_data_fw")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*

	Args: [{ false point Vector2} { false data Variant} { false from Object}], Returns: void
*/
func (o *ScriptEditor) DropDataFw(point gdnative.Vector2, data gdnative.Variant, from ObjectImplementer) {
	//log.Println("Calling ScriptEditor.DropDataFw()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromVector2(point)
	ptrArguments[1] = gdnative.NewPointerFromVariant(data)
	ptrArguments[2] = gdnative.NewPointerFromObject(from.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "drop_data_fw")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Returns a [Script] that is currently active in editor.
	Args: [], Returns: Script
*/
func (o *ScriptEditor) GetCurrentScript() ScriptImplementer {
	//log.Println("Calling ScriptEditor.GetCurrentScript()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "get_current_script")

	// Call the parent method.
	// Script
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := newScriptFromPointer(retPtr)

	// Check to see if we already have an instance of this object in our Go instance registry.
	if instance, ok := InstanceRegistry.Get(ret.GetBaseObject().ID()); ok {
		return instance.(ScriptImplementer)
	}

	// Check to see what kind of class this is and create it. This is generally used with
	// GetNode().
	className := ret.GetClass()
	if className != "Script" {
		actualRet := getActualClass(className, ret.GetBaseObject())
		return actualRet.(ScriptImplementer)
	}

	return &ret
}

/*

	Args: [{ false point Vector2} { false from Object}], Returns: Variant
*/
func (o *ScriptEditor) GetDragDataFw(point gdnative.Vector2, from ObjectImplementer) gdnative.Variant {
	//log.Println("Calling ScriptEditor.GetDragDataFw()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromVector2(point)
	ptrArguments[1] = gdnative.NewPointerFromObject(from.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "get_drag_data_fw")

	// Call the parent method.
	// Variant
	retPtr := gdnative.NewEmptyVariant()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVariantFromPointer(retPtr)
	return ret
}

/*
        Returns an array with all [Script] objects which are currently open in editor.
	Args: [], Returns: Array
*/
func (o *ScriptEditor) GetOpenScripts() gdnative.Array {
	//log.Println("Calling ScriptEditor.GetOpenScripts()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "get_open_scripts")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*

	Args: [{ false base_name String} { false base_path String}], Returns: void
*/
func (o *ScriptEditor) OpenScriptCreateDialog(baseName gdnative.String, basePath gdnative.String) {
	//log.Println("Calling ScriptEditor.OpenScriptCreateDialog()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromString(baseName)
	ptrArguments[1] = gdnative.NewPointerFromString(basePath)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ScriptEditor", "open_script_create_dialog")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// ScriptEditorImplementer is an interface that implements the methods
// of the ScriptEditor class.
type ScriptEditorImplementer interface {
	PanelContainerImplementer
	X_AddCallback(arg0 ObjectImplementer, arg1 gdnative.String, arg2 gdnative.PoolStringArray)
	X_AutosaveScripts()
	X_Breaked(arg0 gdnative.Bool, arg1 gdnative.Bool)
	X_CloseAllTabs()
	X_CloseCurrentTab()
	X_CloseDiscardCurrentTab(arg0 gdnative.String)
	X_CloseDocsTab()
	X_CloseOtherTabs()
	X_CopyScriptPath()
	X_EditorPause()
	X_EditorPlay()
	X_EditorSettingsChanged()
	X_EditorStop()
	X_FileDialogAction(arg0 gdnative.String)
	X_GetDebugTooltip(arg0 gdnative.String, arg1 ObjectImplementer) gdnative.String
	X_GotoScriptLine(arg0 ReferenceImplementer, arg1 gdnative.Int)
	X_GotoScriptLine2(arg0 gdnative.Int)
	X_HelpClassGoto(arg0 gdnative.String)
	X_HelpClassOpen(arg0 gdnative.String)
	X_HelpOverviewSelected(arg0 gdnative.Int)
	X_HelpSearch(arg0 gdnative.String)
	X_HistoryBack()
	X_HistoryForward()
	X_LiveAutoReloadRunningScripts()
	X_MembersOverviewSelected(arg0 gdnative.Int)
	X_MenuOption(arg0 gdnative.Int)
	X_OnFindInFilesModifiedFiles(arg0 gdnative.PoolStringArray)
	X_OnFindInFilesRequested(arg0 gdnative.String)
	X_OnFindInFilesResultSelected(arg0 gdnative.String, arg1 gdnative.Int, arg2 gdnative.Int, arg3 gdnative.Int)
	X_OpenRecentScript(arg0 gdnative.Int)
	X_ReloadScripts()
	X_RequestHelp(arg0 gdnative.String)
	X_ResSavedCallback(arg0 ResourceImplementer)
	X_ResaveScripts(arg0 gdnative.String)
	X_SaveHistory()
	X_ScriptChanged()
	X_ScriptCreated(arg0 ScriptImplementer)
	X_ScriptListGuiInput(arg0 InputEventImplementer)
	X_ScriptSelected(arg0 gdnative.Int)
	X_ScriptSplitDragged(arg0 gdnative.Real)
	X_ShowDebugger(arg0 gdnative.Bool)
	X_StartFindInFiles(arg0 gdnative.Bool)
	X_TabChanged(arg0 gdnative.Int)
	X_ThemeOption(arg0 gdnative.Int)
	X_ToggleMembersOverviewAlphaSort(arg0 gdnative.Bool)
	X_TreeChanged()
	X_UpdateMembersOverview()
	X_UpdateRecentScripts()
	X_UpdateScriptNames()
	CanDropDataFw(point gdnative.Vector2, data gdnative.Variant, from ObjectImplementer) gdnative.Bool
	DropDataFw(point gdnative.Vector2, data gdnative.Variant, from ObjectImplementer)
	GetCurrentScript() ScriptImplementer
	GetDragDataFw(point gdnative.Vector2, from ObjectImplementer) gdnative.Variant
	GetOpenScripts() gdnative.Array
	OpenScriptCreateDialog(baseName gdnative.String, basePath gdnative.String)
}
