package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// VisualShaderNodeVectorOpOperator is an enum for Operator values.
type VisualShaderNodeVectorOpOperator int

const (
	VisualShaderNodeVectorOpOpAdd   VisualShaderNodeVectorOpOperator = 0
	VisualShaderNodeVectorOpOpCross VisualShaderNodeVectorOpOperator = 8
	VisualShaderNodeVectorOpOpDiv   VisualShaderNodeVectorOpOperator = 3
	VisualShaderNodeVectorOpOpMax   VisualShaderNodeVectorOpOperator = 6
	VisualShaderNodeVectorOpOpMin   VisualShaderNodeVectorOpOperator = 7
	VisualShaderNodeVectorOpOpMod   VisualShaderNodeVectorOpOperator = 4
	VisualShaderNodeVectorOpOpMul   VisualShaderNodeVectorOpOperator = 2
	VisualShaderNodeVectorOpOpPow   VisualShaderNodeVectorOpOperator = 5
	VisualShaderNodeVectorOpOpSub   VisualShaderNodeVectorOpOperator = 1
)

//func NewVisualShaderNodeVectorOpFromPointer(ptr gdnative.Pointer) VisualShaderNodeVectorOp {
func newVisualShaderNodeVectorOpFromPointer(ptr gdnative.Pointer) VisualShaderNodeVectorOp {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeVectorOp{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type VisualShaderNodeVectorOp struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeVectorOp) BaseClass() string {
	return "VisualShaderNodeVectorOp"
}

/*
        Undocumented
	Args: [], Returns: enum.VisualShaderNodeVectorOp::Operator
*/
func (o *VisualShaderNodeVectorOp) GetOperator() VisualShaderNodeVectorOpOperator {
	//log.Println("Calling VisualShaderNodeVectorOp.GetOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeVectorOp", "get_operator")

	// Call the parent method.
	// enum.VisualShaderNodeVectorOp::Operator
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return VisualShaderNodeVectorOpOperator(ret)
}

/*
        Undocumented
	Args: [{ false op int}], Returns: void
*/
func (o *VisualShaderNodeVectorOp) SetOperator(op gdnative.Int) {
	//log.Println("Calling VisualShaderNodeVectorOp.SetOperator()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(op)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeVectorOp", "set_operator")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualShaderNodeVectorOpImplementer is an interface that implements the methods
// of the VisualShaderNodeVectorOp class.
type VisualShaderNodeVectorOpImplementer interface {
	VisualShaderNodeImplementer
	SetOperator(op gdnative.Int)
}
