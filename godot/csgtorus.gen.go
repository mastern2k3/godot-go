package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewCSGTorusFromPointer(ptr gdnative.Pointer) CSGTorus {
func newCSGTorusFromPointer(ptr gdnative.Pointer) CSGTorus {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := CSGTorus{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type CSGTorus struct {
	CSGPrimitive
	owner gdnative.Object
}

func (o *CSGTorus) BaseClass() string {
	return "CSGTorus"
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *CSGTorus) GetInnerRadius() gdnative.Real {
	//log.Println("Calling CSGTorus.GetInnerRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_inner_radius")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Material
*/
func (o *CSGTorus) GetMaterial() MaterialImplementer {
	//log.Println("Calling CSGTorus.GetMaterial()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_material")

	// Call the parent method.
	// Material
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := newMaterialFromPointer(retPtr)

	// Check to see if we already have an instance of this object in our Go instance registry.
	if instance, ok := InstanceRegistry.Get(ret.GetBaseObject().ID()); ok {
		return instance.(MaterialImplementer)
	}

	// Check to see what kind of class this is and create it. This is generally used with
	// GetNode().
	className := ret.GetClass()
	if className != "Material" {
		actualRet := getActualClass(className, ret.GetBaseObject())
		return actualRet.(MaterialImplementer)
	}

	return &ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *CSGTorus) GetOuterRadius() gdnative.Real {
	//log.Println("Calling CSGTorus.GetOuterRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_outer_radius")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *CSGTorus) GetRingSides() gdnative.Int {
	//log.Println("Calling CSGTorus.GetRingSides()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_ring_sides")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *CSGTorus) GetSides() gdnative.Int {
	//log.Println("Calling CSGTorus.GetSides()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_sides")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *CSGTorus) GetSmoothFaces() gdnative.Bool {
	//log.Println("Calling CSGTorus.GetSmoothFaces()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "get_smooth_faces")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false radius float}], Returns: void
*/
func (o *CSGTorus) SetInnerRadius(radius gdnative.Real) {
	//log.Println("Calling CSGTorus.SetInnerRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(radius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_inner_radius")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false material Material}], Returns: void
*/
func (o *CSGTorus) SetMaterial(material MaterialImplementer) {
	//log.Println("Calling CSGTorus.SetMaterial()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(material.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_material")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false radius float}], Returns: void
*/
func (o *CSGTorus) SetOuterRadius(radius gdnative.Real) {
	//log.Println("Calling CSGTorus.SetOuterRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(radius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_outer_radius")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false sides int}], Returns: void
*/
func (o *CSGTorus) SetRingSides(sides gdnative.Int) {
	//log.Println("Calling CSGTorus.SetRingSides()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(sides)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_ring_sides")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false sides int}], Returns: void
*/
func (o *CSGTorus) SetSides(sides gdnative.Int) {
	//log.Println("Calling CSGTorus.SetSides()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(sides)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_sides")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false smooth_faces bool}], Returns: void
*/
func (o *CSGTorus) SetSmoothFaces(smoothFaces gdnative.Bool) {
	//log.Println("Calling CSGTorus.SetSmoothFaces()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(smoothFaces)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CSGTorus", "set_smooth_faces")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// CSGTorusImplementer is an interface that implements the methods
// of the CSGTorus class.
type CSGTorusImplementer interface {
	CSGPrimitiveImplementer
	GetInnerRadius() gdnative.Real
	GetMaterial() MaterialImplementer
	GetOuterRadius() gdnative.Real
	GetRingSides() gdnative.Int
	GetSides() gdnative.Int
	GetSmoothFaces() gdnative.Bool
	SetInnerRadius(radius gdnative.Real)
	SetMaterial(material MaterialImplementer)
	SetOuterRadius(radius gdnative.Real)
	SetRingSides(sides gdnative.Int)
	SetSides(sides gdnative.Int)
	SetSmoothFaces(smoothFaces gdnative.Bool)
}
