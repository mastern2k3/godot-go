package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// VisualShaderNodeVectorFuncFunction is an enum for Function values.
type VisualShaderNodeVectorFuncFunction int

const (
	VisualShaderNodeVectorFuncFuncHsv2Rgb    VisualShaderNodeVectorFuncFunction = 5
	VisualShaderNodeVectorFuncFuncNegate     VisualShaderNodeVectorFuncFunction = 2
	VisualShaderNodeVectorFuncFuncNormalize  VisualShaderNodeVectorFuncFunction = 0
	VisualShaderNodeVectorFuncFuncReciprocal VisualShaderNodeVectorFuncFunction = 3
	VisualShaderNodeVectorFuncFuncRgb2Hsv    VisualShaderNodeVectorFuncFunction = 4
	VisualShaderNodeVectorFuncFuncSaturate   VisualShaderNodeVectorFuncFunction = 1
)

//func NewVisualShaderNodeVectorFuncFromPointer(ptr gdnative.Pointer) VisualShaderNodeVectorFunc {
func newVisualShaderNodeVectorFuncFromPointer(ptr gdnative.Pointer) VisualShaderNodeVectorFunc {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeVectorFunc{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type VisualShaderNodeVectorFunc struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeVectorFunc) BaseClass() string {
	return "VisualShaderNodeVectorFunc"
}

/*
        Undocumented
	Args: [], Returns: enum.VisualShaderNodeVectorFunc::Function
*/
func (o *VisualShaderNodeVectorFunc) GetFunction() VisualShaderNodeVectorFuncFunction {
	//log.Println("Calling VisualShaderNodeVectorFunc.GetFunction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeVectorFunc", "get_function")

	// Call the parent method.
	// enum.VisualShaderNodeVectorFunc::Function
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return VisualShaderNodeVectorFuncFunction(ret)
}

/*
        Undocumented
	Args: [{ false func int}], Returns: void
*/
func (o *VisualShaderNodeVectorFunc) SetFunction(function gdnative.Int) {
	//log.Println("Calling VisualShaderNodeVectorFunc.SetFunction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(function)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeVectorFunc", "set_function")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualShaderNodeVectorFuncImplementer is an interface that implements the methods
// of the VisualShaderNodeVectorFunc class.
type VisualShaderNodeVectorFuncImplementer interface {
	VisualShaderNodeImplementer
	SetFunction(function gdnative.Int)
}
