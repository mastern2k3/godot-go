package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewVisualShaderNodeTransformConstantFromPointer(ptr gdnative.Pointer) VisualShaderNodeTransformConstant {
func newVisualShaderNodeTransformConstantFromPointer(ptr gdnative.Pointer) VisualShaderNodeTransformConstant {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeTransformConstant{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type VisualShaderNodeTransformConstant struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeTransformConstant) BaseClass() string {
	return "VisualShaderNodeTransformConstant"
}

/*
        Undocumented
	Args: [], Returns: Transform
*/
func (o *VisualShaderNodeTransformConstant) GetConstant() gdnative.Transform {
	//log.Println("Calling VisualShaderNodeTransformConstant.GetConstant()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeTransformConstant", "get_constant")

	// Call the parent method.
	// Transform
	retPtr := gdnative.NewEmptyTransform()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewTransformFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false value Transform}], Returns: void
*/
func (o *VisualShaderNodeTransformConstant) SetConstant(value gdnative.Transform) {
	//log.Println("Calling VisualShaderNodeTransformConstant.SetConstant()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromTransform(value)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeTransformConstant", "set_constant")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualShaderNodeTransformConstantImplementer is an interface that implements the methods
// of the VisualShaderNodeTransformConstant class.
type VisualShaderNodeTransformConstantImplementer interface {
	VisualShaderNodeImplementer
	GetConstant() gdnative.Transform
	SetConstant(value gdnative.Transform)
}
